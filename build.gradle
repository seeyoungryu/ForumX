plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
// Spring Boot 의존성들
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // Spring Boot Actuator - 애플리케이션 모니터링 및 관리
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Spring Data JPA - JPA를 사용한 데이터베이스 연동
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    // Spring Data REST - JPA 리포지토리를 RESTful 엔드포인트로 노출
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // Thymeleaf 템플릿 엔진
    implementation 'org.springframework.boot:spring-boot-starter-validation' // 데이터 검증 및 유효성 검사
    implementation 'org.springframework.boot:spring-boot-starter-web' // 웹 애플리케이션을 위한 기본 의존성 (MVC 패턴 포함)
    implementation 'org.springframework.data:spring-data-rest-hal-explorer' // HAL Explorer - HATEOAS를 위한 브라우저 지원
    // implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6' // Thymeleaf와 Spring Security 연동
    // Lombok - 코드 간결화를 위한 애너테이션 라이브러리
    compileOnly 'org.projectlombok:lombok' // 컴파일 시에만 Lombok 사용
    annotationProcessor 'org.projectlombok:lombok' // Lombok 애너테이션 처리기
    developmentOnly 'org.springframework.boot:spring-boot-devtools' // 개발 환경에서 핫 리로딩 기능 지원 (개발 시에만 사용되는 의존성)
    // 데이터베이스 관련 의존성
    runtimeOnly 'com.h2database:h2' // H2 인메모리 데이터베이스 - 테스트 및 개발용
    runtimeOnly 'com.mysql:mysql-connector-j' // MySQL 데이터베이스 연결을 위한 JDBC 드라이버
    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // 테스트 프레임워크 (JUnit 포함)
    // testImplementation 'org.springframework.security:spring-security-test' // Spring Security 테스트 지원
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit 플랫폼 런처
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0' // JUnit 5 API
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0' // JUnit 5 엔진
    // QueryDSL 의존성들
    implementation "com.querydsl:querydsl-jpa:5.0.0"  // QueryDSL JPA - JPA를 사용한 타입 세이프 쿼리 작성 (자바 코드로 작성할 수 있게 함)
    implementation "com.querydsl:querydsl-core:5.0.0" // QueryDSL Core - QueryDSL의 기본 기능 제공
    implementation "com.querydsl:querydsl-collections:5.0.0" // QueryDSL Collections - 메모리 내에서 컬렉션에 대해 쿼리
    // ㄴ SQL의 WHERE, ORDER BY, JOIN 등의 기능을 Java 컬렉션에 적용할 수 있게 해주는 도구임
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa" // JPA를 위한 QueryDSL 애너테이션 처리기
    // Jakarta Persistence 및 Annotation API
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.0.0" // Jakarta 애너테이션 API
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0" // Jakarta Persistence API (JPA)


}

tasks.named('test') {
    useJUnitPlatform()
}


// QueryDSL 설정부
def generated = "src/main/generated"

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}
