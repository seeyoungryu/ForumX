plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot 의존성들
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    // QueryDSL 의존성들
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-core:5.0.0"
    implementation "com.querydsl:querydsl-collections:5.0.0"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"

    // Jakarta Persistence 및 Annotation API
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.0.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
}

// QueryDSL 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.compilerArgs += "-s"
    options.compilerArgs += file(generated).path
}

// java source set에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += generated
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

// 별도의 QueryDSL 컴파일 Task
task compileQuerydsl(type: JavaCompile) {
    source = sourceSets.main.java.srcDirs
    classpath = configurations.compileClasspath
    options.annotationProcessorPath = configurations.annotationProcessor
    destinationDirectory = file(generated)
}

compileJava.dependsOn compileQuerydsl

tasks.named('test') {
    useJUnitPlatform()
}
